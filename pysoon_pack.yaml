esphome:
  name: pysoon
  # Ensure route label and totals are correct right after boot
  on_boot:
    priority: -100
    then:
      - lambda: |-
          id(route_label).publish_state(id(outlet_selector).state ? "BIG" : "SMALL");
      - sensor.template.publish:
          id: ml_total_big
          state: !lambda 'return (double) id(lifetime_pulses_big) * id(ml_per_pulse).state / 1000.0;'
      - sensor.template.publish:
          id: ml_total_small
          state: !lambda 'return (double) id(lifetime_pulses_small) * id(ml_per_pulse).state / 1000.0;'
      - sensor.template.publish:
          id: ml_total_lifetime
          state: !lambda 'return (double) (id(lifetime_pulses_big)+id(lifetime_pulses_small)) * id(ml_per_pulse).state / 1000.0;'

substitutions:
  # Safety timeouts
  max_work_time_valve: "210s"
  max_work_time_pump: "200s"

  # Pins
  relay_1_pin: GPIO33
  relay_2_pin: GPIO32
  relay_3_pin: GPIO13
  relay_4_pin: GPIO12
  relay_5_pin: GPIO21    # Diverter (Big/Small)
  relay_6_pin: GPIO19    # Valve OUT
  relay_7_pin: GPIO18    # Valve IN
  relay_8_pin: GPIO05    # Pump
  flow_pin:   GPIO22     # NOTE: no internal pullups; prefer 27/26/25 if possible

  # Calibration/logic constants
  default_ml_per_pulse: "0.182"
  tail_ml: "5.0"
  valve_delay_ms: "1000"

packages:
  core:     !include packages_pysoon/core.yaml
  globals:  !include packages_pysoon/globals.yaml
  numbers:  !include packages_pysoon/numbers.yaml
  buttons:  !include packages_pysoon/buttons.yaml
  status:   !include packages_pysoon/status.yaml
  sensors:  !include packages_pysoon/sensors.yaml
  switches: !include packages_pysoon/switches.yaml
  scripts:  !include packages_pysoon/scripts.yaml
