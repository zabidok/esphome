substitutions:
  dev_name: epaper-dash
  temp_host: temp.local
  temp_auth_header: "Basic emFiaWRvazpaYTQ1NjU3OQ=="

esphome:
  name: ${dev_name}
  includes:
    - custom_epd.h
  platformio_options:
    lib_deps:
      - zinggjm/GxEPD2

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
  level: INFO

wifi:
  fast_connect: true
  networks:
    - ssid: !secret wifi_ssid_one
      password: !secret wifi_ssid_one_pass
      hidden: true


web_server:  # опционально, чтобы смотреть состояние самого дисплея
  port: 80
  version: 3

time:
  - platform: sntp
    id: home_time

# HTTP клиент для опроса temp.local
# http_request:
#   timeout: 8s

# Шрифты (Google Fonts — подтянутся автоматически)
font:
  - file: "gfonts://Roboto"
    id: f_title
    size: 22
  - file: "gfonts://Roboto"
    id: f_norm
    size: 18


script:
  - id: refresh_from_temp
    mode: restart
    then:
      - component.update: epd

# SPI и дисплей
spi:
  clk_pin: 13
  mosi_pin: 14
button:
  - platform: template
    name: "Refresh now"
    id: refresh_now
    on_press:
      - script.execute: refresh_from_temp
display:
  - platform: custom
    type: display
    lambda: |-
      auto *d = new MyGxDisplay(400, 300, 13, 14, -1, 15, 27, 26, 25);
      return {d};
    update_interval: never
    id: epd
    draw_lambda: |-
      it.fill(Color::WHITE);
      it.print(10, 26, id(f_title), Color::RED, "temp.local");

